from numpy import *
from pylab import *

def simple():	
	plot( array( [1., 2., 3., 4., 5., 6., 7., 8., 9., 10 ] ), 
		array( [0.888830188679245,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642,
		0.871094339622642] ), 'b-',
	 	array( [1., 2., 3., 4., 5., 6., 7., 8., 9., 10 ] ), 
		array( [0.701812688821752,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876,
		0.700906344410876 ] ), 'r-' )
	legend( ('Training', 'Test' ) )
	ylabel( 'Accuracy' )
	xlabel( 'Number of layers' )
	title( 'Accuracy versus number of stack layers (Simple)' )
	ylim( [0.5, 1.] )
	input()
	return

def cumulative():
	plot( array( [1., 2., 3., 4., 5., 6., 7., 8., 9., 10 ] ), 
		array( [0.888830188679245,
		0.871094339622642,
		0.911018867924528,
		0.99977358490566,
		0.995169811320755,
		0.991547169811321,
		0.99977358490566,
		0.99977358490566,
		0.99977358490566,
		0.99977358490566] ), 'b-',
	 	array( [1., 2., 3., 4., 5., 6., 7., 8., 9., 10 ] ), 
		array( [0.702114803625378,
		0.700906344410876,
		0.701208459214502,
		0.705135951661631,
		0.709969788519637,
		0.709969788519637,
		0.708157099697885,
		0.705740181268882,
		0.702114803625378,
		0.696978851963746] ), 'r-' )
	legend( ('Training', 'Test' ) )
	ylabel( 'Accuracy' )
	xlabel( 'Number of layers' )
	title( 'Accuracy versus number of stack layers (Cumulative)' )
	ylim( [0.5, 1.] )
	input()	
	return

if __name__=="__main__":
	cumulative()